/*** *	Headsheet ***/#pragma once#include "MCLDEF.h"#include "mc_db.h"typedef struct {	ModellStruct	*ms;	long			pic;} LDEFHeadsheetStruct;class MCHeadsheet : MCLDEF {	static pascal short	SearchFunk(Ptr cellDataPtr, Ptr searchDataPtr, short cellDataLen, short searchDataLen);protected:	virtual void	OpenObject(Cell theCell);	virtual short	Compare(Ptr a, Ptr b);	virtual void	LDEFCallback(short lMessage, Boolean lSelect, Rect *lRect, Cell lCell, short lDataOffset, short lDataLen, ListHandle lHandle);	virtual void	OpenList(Boolean infoFlag);	// Menü-Commandos	virtual Boolean	DoCommand(long cmd);	virtual void	GetCommandStatus(long cmd, Boolean &enabled, short &markChar, Str255 &name);	// Drag & Drop Manager Support	virtual OSErr	SStartDrag(EventRecord *theEvent);	virtual OSErr	SReceiveDrop(DragReference theDrag);	virtual OSErr	STracking(short message, DragReference theDrag);	virtual OSErr	SSendData(FlavorType theFlavor, ItemReference theItem, DragReference theDrag);public:	static void		Create(short count, const LDEFHeadsheetStruct *hsp);};OSErr			GetDropLocationDirectory(AEDesc *dropLocation, long *directoryID, short *volumeID);Boolean			DropLocationIsFinderTrash(AEDesc *dropLocation);Boolean			MouseIsInContentRgn(DragReference theDrag, WindowPtr theWindow);Boolean			DragItemsAreAcceptable(DragReference theDrag);Boolean			DragIsNotInSourceWindow(DragReference theDrag);