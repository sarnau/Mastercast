/*** *	generelles LDEF-Window mit zwei Scrollbars und Zellen drin (eine eindimensionale Liste, die im Fenster dargestellt wird) * *	©1994 Mastercast, Markus Fritze ***/#pragma once#include "WindowBase.h"#include <Lists.h>class	MCLDEF;typedef struct {	ListDefUPP		CallbackUPP;		// UniversalProcPtr für PowerPC Implementation	MCLDEF			*thisPtr;} refConStructType;class MCLDEF : protected WindowBase {	static pascal void	MCLDEFCallback(short lMessage, Boolean lSelect, Rect *lRect, Cell lCell, short lDataOffset, short lDataLen, ListHandle lHandle);	refConStructType	refConStruct;protected:	ListHandle		IList;				// die im Window dargestellte Liste	short			STRResId;			// Resource ID der STR#	ListSearchProcPtr	SearchProcPtr;	// SearchProc für Keyboard-Suche	short			ElementCount;		// Anzahl der Elemente	short			ElementSize;		// Größe eines Elementes in Bytes	Point			TableSize;			// Defaultgröße der Tabelle	Point			CellSize;			// Größe einer Zelle	short			InfoLineHeight;		// Höhe der Infozeile	short			SelectedCells;		// Anzahl der selektierten Zellen	void			DrawInfoline(Boolean forceRedraw);	void			SetWindowSize(void);	virtual void	UpdateFlags(void);	virtual void	OpenObject(Cell theCell) = 0;	virtual short	Compare(Ptr a, Ptr b) = 0;	virtual void	LDEFCallback(short lMessage, Boolean lSelect, Rect *lRect, Cell lCell, short lDataOffset, short lDataLen, ListHandle lHandle) = 0;	// Menü-Commandos	virtual Boolean		DoCommand(long cmd);	virtual void		GetCommandStatus(long cmd, Boolean &enabled, short &markChar, Str255 &name);public:	virtual void	Open(short cellHeight, short cellWidth, short tableHeight, short tableWidth,						short resid, StringPtr windName, short elemCount,						short elemSize, Ptr listData, ListSearchProcPtr ldefSProc,						WindowScrapAttributes scrpattr, short infoheight = 20);	virtual			~MCLDEF();	virtual void	Klick(Point p, short clicks, Boolean &onItem);	// Klick ins Window, ggf. Mehrfachklick	virtual void	Draw(void);								// Window updaten	virtual void	EventActivate(Boolean flag);			// Window wurde aktiviert	virtual void	Adjust(void);							// neue Fenstergröße wurde gesetzt	virtual Boolean	EventKey(char key, short modifiers);	// Taste bei getoppten gedrückt, (true, wenn Taste angenommen wurde)	void			AddData(short count, Ptr data);	void			RemoveData(short count, Ptr data);	Ptr				GetData(short &count);	Ptr				GetSelectedData(short &count);	short			CountData(void) { return ElementCount; };	short			CountSelectedData(void) { return SelectedCells; };	RgnHandle		SelectedDataRgn(void);};