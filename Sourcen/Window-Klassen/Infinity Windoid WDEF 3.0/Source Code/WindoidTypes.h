// *****************************************************************************////	WindoidTypes.h//// —————————————————————————————————————————————————————————————————————————————//	Copyright © 1991-95 Infinity Systems.  All rights reserved.// —————————————————————————————————————————————————————————————————————————————#ifndef Infinity_WINDOIDTYPES#define Infinity_WINDOIDTYPES#include "WindoidDefines.h"#include <Types.h>#include <Windows.h>// *****************************************************************************////	Constants//// *****************************************************************************// —————————————————————————————————————————————————————————————————————————————////	Apple System 7.5 style variations	//// —————————————————————————————————————————————————————————————————————————————enum {	kSystem75_toggleTBar = 1,	// Bit 0 tells us whether to hilite/unhilite 								//       the title bar.	kSystem75_hasGrow	 = 2,	// Bit 1 is the grow bit.	kSystem75_hasZoom	 = 4,	// Bit 2 is the zoom bit.	kSystem75_vertTBar	 = 8	// Bit 3 set if titlebar is vertical.};// —————————————————————————————————————————————————————————————————————————————////	MacApp style variations	//// —————————————————————————————————————————————————————————————————————————————enum {	kMacApp_toggleTBar	= 1,	// Bit 0 tells us whether to hilite/unhilite 								//       the title bar.	kMacApp_hasTallTBar	= 2,	// Bit 1 is tall title bar bit (unsupported).	kMacApp_hasGrow		= 4,	// Bit 2 is grow bit.	kMacApp_hasZoom		= 8		// Bit 3 is zoom bit (standard zoom bit).};// *****************************************************************************////	Structures//// *****************************************************************************typedef struct {	WStateData		wState;	unsigned char	closeToggle;	unsigned char	zoomToggle;	unsigned char	isHoriz;	unsigned char	ignoreHilite;#if qThinkStyle	unsigned char	hasTitlebar;#endif#if qAllowGrow	unsigned char	hasGrow;#endif} WindoidData, *WindoidDataPtr, **WindoidDataHandle;// —————————————————————————————————————————————————————————————————————————————////	Accessor Macro//// —————————————————————————————————————————————————————————————————————————————#define WindData (**(WindoidDataHandle) window->dataHandle)	// This macro is used so I can access the ‘globals’ easily. Note: the	// variable containing the window must be named ‘window’, and it must be in	// scope at the time of the usage of this macro.  Also, they aren’t REALLY 	// globals, becuase they’re kept for EACH window.// —————————————————————————————————————————————————————————————————————————————#endif