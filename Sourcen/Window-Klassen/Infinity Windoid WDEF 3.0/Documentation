Infinity Windoid WDEF Documentationby Troy GaulInfinity SystemsThe Infinity Windoid WDEF is © 1991-95 Infinity Systems. All rights reserved.I M P O R T A N T    N O T E SIf you will be compiling your own version of the Infinity Windoid, or even just using it in a program, do not set the purgeable bit of the WDEF resource.  Doing so is known to cause problems in certain situations (it seems to be more prominent with System 7.5 than it has been in the past). If you have an application that already uses the Infinity Windoid, check it for this problem (some project files included in previous distributions of the WDEF may have had this bit set).The variation codes used by the Infinity Windoid by default (the compiled version that are included) are now different. Any windows that use a previous version of the Infinity Windoid WDEF will have to have its procID changed slightly. It now uses the same variation codes as Apple’s System 7.5 floating window WDEF. In particular, add 4 to the procID to get a zoom box (instead of 8 as in the past); add 2 to get a grow box (instead of using 4 to prohibit a grow box); always add 1 (to make sure that the WDEF will dim when it’s window’s hilited flag is not on) unless you expressly want the “always hilight” behavior, and finally, add 8 if you want the titlebar down the left side (instead of 2 as in the past). See the file “InfinityWindoid.h” for a new set of useful constants.R E G I S T E R I N G    T H E    I N F I N I T Y    W I N D O I D    W D E FYou can register your copy of the Infinty Windoid WDEF. Doing so is free and requires only a message sent to me with information about you (and your company if you are connected to one).I will then add you to my list of registered users, and you will receive notification of future versions and beta testing opportunities. Make sure to include an e-mail address (Internet, AppleLink, America Online, or any other service with an Internet gateway).You can find the latest version of the Infinity Windoid on the Internet in the Info-Mac archives at sumex.stanford.edu (there are also several mirror sites that are usually much more accessable).  I also try to keep the Mac developer forum on AOL up to date.Troy GaulInfinity Systems8500 148th Ave. N.E. #CC1101Redmond, WA 98052Internet:  tgaul@halcyon.com		(preferred)America Online:  TGauleWorld:  TGaulS Y S T E M   7 . 5   F L O A T I N G   W I N D O W   W D E FWith System 7.5 and later Systems, a new WDEF is included. This WDEF can be seen on the Apple Guide windows. Apparently, Apple was encouraging developers to use this WDEF for their own floating windows at the Worldwide Developers Conference (I heard this was the case — I was unable to attend myself).The ID of the 7.5 windoid WDEF resource is 124. Apple employees have said that by using this WDEF ID when the System version is 7.5 or later, your application will automatically get any changes that are made to this WDEF in future Systems. Also, in a future System version, Apple will be rewriting the Window Manager, and it apparently will no longer use WDEFs as its means of customization (actually, WDEFs will probably have to be supported for backward compatibility with older applications that include them internally). This may allow the user to change the look of the windows in a System-wide fashion. Windows using the procID that defines the 7.5 windoid WDEF will be automatically compatible with window appearances in future System releases. It has been said that the new Window Manager will also support floating and modal windows directly.INFINITY WINDOID SUPPORT:While I’m was exactly a fan of the graphic design of this new WDEF at first, it has grown on me, and I thought that it was important for me to support it in the Infinity Windoid. Version 3.0 supports it in several ways. First, there is a compiler flag that causes any version of the Infinity Windoid (that is, any appearance) to support the variation codes used by the new Apple WDEF. This is now the default. This means that you can use the Infinity Windoid with the same varcode for the same behavior (only changing the WDEF ID depending upon the System version). The second flag lets you create a WDEF with the same appearance as the System 7.5 WDEF. To simplify using these two flags, there is another flag that will cause both things to happen (actually, it just causes the other two flags to be defined).Finally, there is a flag that will compile a version of the Infinity Windoid that acts and looks like the 7.5 WDEF on System version eariler than 7.5 (i.e. 6.x, 7.0, 7.0.1, 7.1), but if 7.5 is present it will instead call through to the built-in System-supplied WDEF.Starting with version 3.0 of the Infinity Windoid, the default compiler flags for the WDEF cause it to use the same variation codes as the Apple WDEF, as these should become the standard.USING THE SYSTEM 7.5 FLOATER WDEF:In order to use the System 7.5 floater WDEF, first make sure the user is running System 7.5.  It isn't available in eariler System versions — Apple has said that they will release a ‘compatibility’ WDEF that you will be able to include in your App that will call through to the System floater WDEF if it is present (like the Movable Modal WDEF they released for compatibility with System 6). They haven’t released this yet, though, so instead, you can include the Infinity Windoid and use it if the System version is earlier than 7.5.Second, call NewWindow:wind = NewWindow(nil, &rBounds, title, visFlag, wDefProcID, behind, goAwayFlag, refCon);(One side note about NewWindow, NewDialog, etc: Apple has indicated that you should call them with nil as the storage paramater to allow the System to allocate memory for the window — instead of allocating it yourself.  The reason for this involves changes that will be made to the Window Manager in the future.)For the wDefProcID, pass in one of:/* floating window defproc ids */    floatProc              = 1985,    floatGrowProc          = 1987,    floatZoomProc          = 1989,    floatZoomGrowProc      = 1991,    floatSideProc          = 1993,    floatSideGrowProc      = 1995,    floatSideZoomProc      = 1997,    floatSideZoomGrowProc  = 1999,These definitions are found in Windows.h in the new set of Universal Headers (known as version 2.0) that were included for the first time on ETO 15.  If you aren’t using these headers, you might want to make these definitions for yourself for now.If the System version is earlier than 7.5, use one of the following constants from InfinityWindoid.h instead (and don’t forget to include the WDEF from the file “I.W./68K/Apple 7.5 design” that is included in this package in your application):    kInfinityProc    kInfinityGrowProc    kInfinityZoomProc    kInfinityZoomGrowProc    kInfinitySideProc    kInfinitySideGrowProc    kInfinitySideZoomProc    kInfinitySideZoomGrowProcAlso, if you pass in a non-empty string in ‘title’, it will be displayed in Geneva 9 plain (assuming the titlebar is across the top).NOTES ABOUT FLOATER WDEF FROM 7.5:There are a couple idiosyncacies with the floating window WDEF that was shipped with the System 7.5 release.The grow box is one pixel narrower than the standard grow box, which means that a scroll bar will look strange when sized to match it, and the grow box doesn't dim when the rest of the windoid dims.  Also, the titlebar flashes more than it needs to when being redrawn, and there is a minor problem with multiple monitors (it is possible with the right monitor configuration that the WDEF will always draw in black and white, even if it is partly or entirely on a color monitor).M A K I N G    W I N D O W S    F L O A TWhile the Infinity Windoid WDEF is designed to be used for floating windows (which are sometimes known as utility windows, tool windows, windoids, or floaters), the Infinity Windoid WDEF does not help you to make your windows float above document windows.There are no routines built into the high level Window Manager to support making windows float. Only by using the low level routines in the Window Manager is it possible to create code which will support floating windows. In the future (rumor has it, the Copland system release) the MacOS will directly support floating and modal windows.The logistics of making a set of windoids float in a layer above other windows are fairly complicated, so I will not go into them here. In issue 15 of Develop magazine, there is an article that provides these details. This article also presents a library of code that can be used to create floating windows. There are also a few other libraries of code available that create floating windows. These have varying levels of polish, and can be found at the standard archive sites like info-mac on sumex-aim.stanford.edu and America Online.In order to get a copy of issue 15 of Develop, you can contact Develop at:DevelopApple Computer, Inc.P.O. Box 531Mount Morris, IL 61054-78581-800-877-5548 in the U.S.(815) 734-1116 in all other countries(815) 734-1127 FAXYou can get a printed back issue of issue 15 for $13 in the U.S. ($20 elsewhere). It is my understanding that a back issue such as this will come with the latest version of the CD-ROM, so you will get any changes that have been made since the original article was published (there were newer versions released with issues 16, 18, and 20 of Develop, for example).You can also get a one year (four issue) subscription for $30 in the U.S. ($50 elsewhere). Each issue includes a CD-ROM that contains all of the back issues of Develop and code for each issue. Most issues are available in Apple DocViewer format, so you could subscribe and you’d get the issue 15 article on the CD-ROM with your first issue.C O N D I T I O N S    F O R    U S EI hereby grant users of the Infinity Windoid WDEF permission to use a WDEF created by it (or any modified version of it) in applications (or any other type of Macintosh software like extensions -- freeware, shareware, commercial, or other) for free, subject to the terms that:   (1)  This agreement is non-exclusive.   (2)  I, Troy Gaul, retain the copyright to the original source code.These two items are the only required conditions for use of the WDEF. However, I do have a few additional requests. Note, however, that these are only requests, and that they are not required conditions for use of a Windoid WDEF created by this code.   (1)  That I be given credit for the Infinity Windoid WDEF in the copyrights or acknowledgements section of your manual or other appropriate documentation.   (2)  That the name of the WDEF resource remains "Infinity Windoid x.x" (where x.x is replaced by the current version of the Infinity Windoid).   (3)  That you send me the name of any package that the WDEF is used within, and that I be granted permission to use this information in a list of applications using the Infinity Windoid WDEF.   (4)  That I receive a complimentary copy of the application in which it is used. For a commercial application, this means that I get the full package that can be registered. For a shareware application, this means I get a registered copy of the application. For an in-house application (or something similar), this item does not apply.I would like to repeat that these last items are only requests. You are prefectly free to choose not to do any or all of them. I do not believe they should be unreasonable to anyone, but I would rather have people not do these things than not use my Windoid WDEF or bother taking the time to write one like it when that is unnecessary.My goal in writing this WDEF and in releasing it to the public is to get it used in as many places as possible. There should no longer be any reason for a program to use an old-style black-and-white Windoid WDEF.A B O U T    O T H E R    V E R S I O N SIn the past, there have been other version of the Infinity Windoid WDEF included with the package. In an effort to further standardize the appearance of floating windows using the Infinity Windoid WDEF, I have removed these. Instead, you should choose a procID from the set in InfinityWindoid.h to achieve the features you desire from the WDEF. For existing applications, this may mean editing either your code or resources to use the new set of variation codes.If you really need to compile a version of the WDEF without certain features compiled in (e.g for a very small footprint in memory), or to compile a backward compatible version of the WDEF (e.g. because you don’t have access to the source or resources used to define the windows the WDEF is used for), there are still a number of options that can be set in WindoidDefines.h to let you accomplish this with a minimum of effort.A P P L I C A T I O N S    U S I N G    T H E    I N F I N I T Y    W I N D O I DSince the release of version 2.2 of the Infinity Windoid WDEF, several authors of freeware, shareware, and commercial applications have begun to use it in their packages. Some of the packages where the Infinity Windoid can be seen include:	• Cinemaina ’95, by Microsoft — a CD-ROM-based guide to movies and moviemakers• Code Warrior, by Metrowerks (including each of the compilers and the debugger).• Color It!, Enhance, and Paint It!, by MicroFrontier, Inc.• Desktop Strip, by Men & Mice — a shareware utility to run Control Strip modules on desktop Macs.• DragStrip, by Natural Intelligence — a utility for creating icon strips for launching and dragging.• Finder Pals, by Robert Mah — a Ziffnet utility that adds floating windows to the Finder.• GURU, by Craig Marciniak — GUide to RAM Upgrades, a free memory checking and information utility sponsored by Newer Technology.• HoverBar, by Guy Fullerton — a shareware program that provides floating icon strips.• JPEGView 3.x, by Aaron Giles — a freeware JPEG/GIF/etc. image viewer and slide show program.• Malph, by Nitin Ganatra — a freeware "drag-happy process switcher/launcher".• MetaFlo, by The Valis Group — an image distortion utility.• Newton Developer Toolkit, by Apple Computer, Inc.• PowerDock and ToolBar library, by Narayan Sainaney.• PowerScan 2.0, by Jonas Wallden — a shareware file scanning utility.• RPG Tools, by BadgerCom — a role-playing game utility.• SITcomm, by Aladdin Systems — a terminal emulation program.• Sparkle, by Maynard Handley — a freeware MPEG movie viewer and converter.• SquareOne 2.0, by Binary Software — an icon-dock utility.• VistaPro, by Virtual Reality Labs — a terrain image generator.• Visual C++ for Macintosh, by Microsoft — a Windows NT-based cross compiler (the WDEF is included with a library of code for Macintosh users).• Warlords II, by Strategic Studies Group — an adventure game.• and many more...A C K N O W L E D G E M E N T SIn the course of creating and distributing this Windoid WDEF, it has been more than a singular effort. There are several other people who deserve recognition of their part:Tom Pinkerton, who wrote a windoid WDEF from which I created this one and who, basically, taught me how to program the Macintosh.Richard Harms, who kept pushing me to add features (such as the System 6 color support, support for 68000 machines, and the MacApp-style). He also told me about the bugs he found, and prodded me to release the first version to the public. Jim Petrick, who sent me his modified version of the WDEF upon which version 2.5’s support for a grow box was based. Also, he diagnosed and corrected a problem with the way 2.3 handled custom window color tables, and his version inspired some of the changes made to simplify the code.Aaron Giles, who has given me a lot of help in getting the Infinity Windoid WDEF to compile into a Fat binary and PowerPC only version using Apple's development environment.Also, the book Macintosh Programming Secrets by Scott Knaster and Keith Rollin provided a couple routines (for example, SyncPorts) that helped to make the code more robust.Thanks to MicroFrontier for letting me release this WDEF (which was originally written for Color It!) for use by others.I’d like to thank all of those people who have registered the Infinity Windoid WDEF. Several of these people have also helped me to beta test new versions. This has helped to assure me that the latest version is the best, most stable one yet.Finally, I need to acknowledge those people and companies who have decided to use the Infinity Windoid WDEF. It is this reason for which I released this WDEF to the public in the first place, and I am glad I can help to provide a more attractive, consistent interface for users of these products.